<<<<<<< HEAD

from math import *
import random 
import numpy as np
from matplotlib import pyplot as plt #f체r die graphiken
import time

# x Werte und eine Liste, die zu jeden x-Werte eine Liste der y-Werte enth채llt
def graph_off(x, y_werte):
    y_listen = []
    Summe = []
    for i in range(len(y_werte[0])):
        y_listen += [[]]
        for j in y_werte:
            y_listen[i] += [j[i]]
            if i == 0:
                Summe += [sum(j)]
    #print(x,y_listen)

    #Das Bild
    plt.figure(figsize=(12,8))

    farben = [ 'dimgray' , 'silver', 'lightcoral', 'firebrick', 'darkred' ,'red', 'orangered' , 'darkorange', 'gold', 'yellow' , 'yellowgreen' , 'limegreen', 'forestgreen' , 'darkgreen' , 'teal' , 'royalblue' , 'navy' , 'indigo']

    for y in range(len(y_listen)):
        plt.plot(x,y_listen[y], label = "Bereich " + str(y+1) , color = farben[y])

    
    #plt.plot(x, Summe , label = "Summe" , color = 'black')
    plt.xlabel('Winkel')
    plt.ylabel('Punkte')
    #plt.ylim(10,-10)
    plt.legend()
    plt.show()
    plt.savefig('el_20231228_01_01.png')
    
Daten = [[5034, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4966], [4838, 61, 64, 19, 60, 24, 13, 8, 11, 18, 19, 42, 14, 48, 46, 4715], [4584, 98, 115, 41, 98, 40, 41, 16, 16, 36, 21, 112, 44, 106, 104, 4528], [4318, 161, 153, 60, 154, 69, 66, 25, 30, 43, 55, 161, 56, 153, 159, 4337], [4151, 213, 212, 91, 193, 73, 81, 35, 35, 83, 81, 183, 64, 198, 227, 4080], [3883, 271, 276, 103, 238, 113, 103, 52, 61, 114, 83, 248, 96, 236, 259, 3864], [3609, 296, 294, 103, 313, 109, 118, 70, 66, 124, 114, 326, 116, 317, 299, 3726], [3439, 359, 363, 147, 334, 136, 129, 75, 78, 131, 158, 373, 152, 338, 351, 3437], [3239, 412, 375, 156, 380, 164, 155, 91, 81, 165, 161, 357, 156, 417, 416, 3275], [3049, 477, 446, 169, 454, 171, 162, 114, 110, 184, 188, 462, 173, 414, 408, 3019], [2804, 515, 476, 202, 491, 201, 197, 114, 103, 197, 205, 486, 188, 494, 488, 2839], [2588, 594, 506, 239, 516, 241, 205, 139, 129, 233, 211, 541, 228, 537, 507, 2586], [2395, 559, 576, 235, 566, 241, 252, 130, 146, 260, 269, 541, 244, 546, 517, 2523], [2261, 576, 575, 296, 573, 282, 267, 172, 168, 291, 267, 602, 280, 590, 634, 2166], [2011, 627, 590, 328, 652, 313, 268, 204, 183, 296, 309, 602, 305, 637, 635, 2040], [1963, 631, 646, 303, 647, 328, 347, 201, 221, 348, 322, 667, 299, 599, 625, 1853], [1751, 699, 669, 352, 667, 366, 349, 235, 208, 323, 352, 638, 344, 654, 673, 1720], [1442, 718, 688, 382, 690, 416, 374, 267, 259, 389, 400, 686, 359, 705, 677, 1548], [1325, 708, 689, 418, 691, 408, 417, 281, 291, 435, 408, 678, 460, 647, 727, 1417], [1211, 706, 681, 440, 654, 434, 453, 293, 352, 468, 463, 657, 495, 732, 697, 1264], [1089, 708, 673, 471, 674, 506, 472, 383, 382, 461, 475, 715, 495, 657, 720, 1119], [950, 673, 709, 480, 677, 538, 515, 415, 397, 547, 579, 677, 528, 683, 663, 969], [857, 701, 694, 575, 707, 560, 533, 468, 476, 505, 527, 649, 560, 716, 632, 840], [832, 639, 669, 591, 665, 555, 531, 517, 507, 603, 578, 665, 556, 666, 659, 767], [716, 624, 683, 607, 655, 606, 628, 574, 555, 586, 578, 651, 592, 627, 645, 673], [559, 607, 577, 664, 618, 664, 613, 666, 667, 563, 656, 600, 652, 589, 679, 626], [540, 579, 619, 648, 579, 628, 686, 700, 735, 652, 654, 597, 678, 619, 566, 520], [467, 556, 595, 667, 574, 646, 700, 809, 782, 703, 662, 559, 677, 556, 596, 451], [430, 564, 514, 709, 525, 665, 684, 937, 952, 681, 665, 524, 678, 510, 558, 404], [357, 494, 499, 693, 495, 705, 710, 1052, 1055, 696, 689, 499, 687, 513, 439, 417], [316, 451, 509, 672, 453, 697, 694, 1170, 1176, 718, 678, 460, 696, 487, 467, 356], [282, 433, 465, 716, 440, 697, 693, 1332, 1262, 690, 670, 470, 676, 432, 442, 300], [276, 401, 414, 676, 439, 692, 694, 1429, 1524, 657, 699, 390, 667, 388, 390, 264], [229, 388, 378, 694, 359, 685, 654, 1641, 1632, 713, 671, 354, 651, 348, 374, 229], [217, 345, 345, 620, 348, 662, 690, 1807, 1824, 630, 633, 333, 619, 370, 362, 195], [216, 334, 324, 625, 301, 668, 614, 1994, 1874, 645, 607, 324, 608, 328, 327, 211], [170, 287, 304, 567, 293, 639, 588, 2113, 2073, 611, 631, 317, 617, 335, 282, 173], [159, 260, 245, 583, 302, 615, 559, 2372, 2263, 562, 552, 243, 598, 280, 247, 160], [129, 220, 280, 552, 213, 570, 541, 2472, 2550, 578, 536, 235, 518, 237, 232, 137], [100, 201, 196, 498, 219, 475, 531, 2775, 2762, 512, 491, 200, 517, 194, 212, 117], [113, 214, 201, 473, 211, 508, 465, 2888, 2896, 437, 445, 207, 456, 167, 214, 105], [108, 186, 184, 422, 171, 415, 439, 3125, 3131, 388, 393, 185, 416, 174, 167, 96], [88, 157, 139, 375, 142, 377, 400, 3331, 3332, 391, 374, 157, 371, 142, 132, 92], [75, 132, 122, 350, 119, 334, 299, 3531, 3598, 342, 312, 140, 326, 129, 116, 75], [56, 107, 98, 266, 113, 286, 262, 3765, 3817, 283, 270, 119, 304, 104, 102, 48], [47, 94, 96, 223, 93, 208, 227, 4021, 3964, 243, 251, 78, 230, 91, 82, 52], [36, 60, 65, 179, 70, 196, 188, 4284, 4128, 192, 184, 56, 189, 80, 60, 33], [22, 53, 34, 124, 48, 127, 118, 4518, 4433, 110, 135, 40, 120, 37, 58, 23], [13, 35, 34, 80, 22, 103, 77, 4660, 4640, 84, 86, 24, 76, 31, 23, 12], [6, 15, 10, 28, 10, 19, 32, 4894, 4875, 19, 16, 13, 33, 11, 10, 9], [8, 10, 4, 21, 7, 27, 30, 4880, 4905, 22, 22, 5, 27, 20, 4, 8], [20, 34, 41, 65, 34, 91, 75, 4650, 4671, 75, 71, 34, 72, 33, 19, 15], [32, 56, 39, 126, 42, 140, 116, 4477, 4430, 130, 117, 40, 144, 50, 38, 23], [33, 67, 56, 181, 74, 187, 187, 4223, 4225, 182, 187, 57, 168, 69, 64, 40], [45, 79, 85, 258, 82, 214, 240, 4032, 3992, 225, 220, 85, 224, 83, 95, 41], [72, 96, 92, 282, 99, 307, 280, 3708, 3810, 290, 302, 113, 272, 99, 112, 66], [75, 131, 119, 328, 149, 345, 310, 3589, 3493, 335, 337, 121, 341, 142, 116, 69], [89, 145, 140, 367, 145, 389, 352, 3395, 3299, 384, 402, 150, 359, 157, 145, 82], [91, 195, 165, 421, 173, 446, 424, 3069, 3113, 394, 424, 150, 473, 169, 193, 100], [107, 175, 192, 459, 192, 486, 457, 2927, 2897, 464, 465, 197, 478, 172, 213, 119], [125, 211, 209, 517, 237, 529, 494, 2671, 2714, 494, 500, 221, 544, 223, 206, 105], [136, 246, 251, 557, 251, 515, 557, 2526, 2468, 523, 569, 239, 531, 233, 253, 145], [159, 260, 288, 557, 239, 568, 602, 2378, 2319, 538, 588, 279, 574, 238, 245, 168], [167, 302, 298, 622, 288, 592, 610, 2063, 2120, 623, 669, 295, 609, 290, 284, 168], [185, 332, 340, 625, 318, 655, 660, 1883, 1997, 645, 638, 293, 623, 309, 292, 205], [231, 361, 343, 690, 355, 645, 653, 1735, 1735, 682, 645, 322, 700, 324, 355, 224], [240, 374, 382, 652, 384, 684, 719, 1644, 1572, 710, 714, 358, 655, 330, 335, 247], [299, 390, 373, 665, 393, 683, 709, 1532, 1436, 688, 682, 363, 727, 408, 382, 270], [274, 441, 467, 687, 410, 653, 730, 1296, 1307, 696, 733, 399, 719, 449, 446, 293], [332, 470, 478, 721, 470, 726, 705, 1125, 1189, 672, 693, 449, 682, 460, 487, 341], [376, 491, 502, 763, 499, 664, 706, 1052, 1000, 689, 702, 452, 720, 504, 506, 374], [453, 521, 535, 736, 542, 695, 715, 892, 945, 670, 685, 505, 672, 492, 519, 423], [452, 580, 549, 672, 564, 680, 699, 832, 846, 635, 629, 574, 673, 576, 558, 481], [547, 573, 627, 670, 551, 678, 692, 717, 729, 650, 667, 567, 686, 568, 584, 494], [634, 636, 625, 622, 610, 628, 610, 654, 649, 625, 601, 590, 633, 632, 641, 610], [664, 649, 650, 655, 649, 595, 629, 543, 560, 532, 620, 670, 603, 612, 688, 681], [770, 703, 682, 568, 659, 598, 538, 507, 515, 580, 546, 714, 633, 627, 647, 713], [906, 647, 661, 545, 639, 590, 524, 422, 456, 589, 536, 715, 554, 722, 634, 860], [937, 724, 662, 515, 676, 551, 510, 413, 402, 487, 532, 675, 536, 699, 658, 1023], [1088, 713, 716, 520, 658, 475, 490, 372, 354, 492, 488, 721, 482, 668, 689, 1074], [1215, 696, 721, 454, 709, 465, 440, 300, 300, 423, 435, 729, 456, 729, 710, 1218], [1409, 716, 644, 486, 660, 381, 427, 305, 290, 390, 408, 705, 402, 685, 674, 1418], [1530, 696, 688, 380, 675, 379, 327, 253, 243, 393, 416, 705, 399, 685, 688, 1543], [1731, 692, 673, 392, 669, 359, 339, 254, 204, 339, 338, 679, 379, 658, 657, 1637], [1900, 651, 671, 310, 608, 361, 348, 196, 215, 330, 311, 602, 351, 662, 628, 1856], [2050, 641, 616, 304, 594, 309, 309, 179, 175, 303, 307, 678, 323, 613, 613, 1986], [2246, 599, 589, 249, 592, 287, 333, 145, 171, 296, 271, 584, 273, 555, 601, 2209], [2361, 566, 601, 244, 572, 274, 257, 146, 141, 244, 269, 554, 232, 564, 541, 2434], [2669, 513, 521, 250, 532, 212, 222, 152, 117, 224, 216, 570, 204, 509, 505, 2584], [2828, 498, 501, 220, 475, 214, 203, 114, 104, 188, 193, 501, 212, 496, 478, 2775], [3041, 472, 421, 168, 408, 163, 173, 99, 111, 188, 172, 450, 159, 459, 476, 3040], [3254, 377, 397, 170, 377, 159, 170, 86, 94, 156, 140, 408, 169, 435, 359, 3249], [3412, 376, 398, 131, 349, 142, 130, 62, 86, 137, 116, 349, 124, 340, 387, 3461], [3609, 360, 330, 139, 274, 117, 116, 59, 68, 120, 125, 284, 118, 311, 339, 3631], [3861, 234, 280, 76, 266, 99, 99, 47, 56, 97, 96, 273, 87, 256, 243, 3930], [4202, 195, 202, 83, 224, 62, 59, 46, 39, 69, 73, 227, 66, 207, 195, 4051], [4302, 159, 146, 62, 147, 56, 60, 33, 27, 66, 71, 180, 57, 188, 160, 4286], [4526, 95, 109, 43, 103, 43, 48, 20, 22, 43, 43, 106, 38, 104, 120, 4537], [4885, 55, 62, 12, 43, 19, 16, 9, 17, 13, 12, 51, 21, 50, 45, 4690], [5029, 2, 0, 3, 3, 3, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4952]] 
Winkel = np.linspace(0,2*pi,100)
graph_off(Winkel, Daten)
=======

from math import *
import random 
import numpy as np
from matplotlib import pyplot as plt #f체r die graphiken
import time

def interpol(daten, x):
    L = 0
    for i in range(len(daten)):
        L += daten[i][1]*lagrange(daten, i, x)

    return L    

def lagrange(daten, i, x):
    L = 1
    for j in range(len(daten)):
        if j != i:
            L = L * (x-daten[j][0])/(daten[i][0]-daten[j][0])
    return L        

# x Werte und eine Liste, die zu jeden x-Werte eine Liste der y-Werte enth채llt
def graph_off(x, y_werte ,vergleich = False):
    y_listen = []
    Summe = list([])
    for i in range(len(y_werte[0])):
        y_listen += [[]]
        for j in y_werte:
            y_listen[i] += [j[i]]
            #if i == 0:
                #Summe += [sum(j)]
    #print(x,y_listen)

    #Das Bild
    plt.figure(figsize=(12,8))

    farben = [ 'dimgray' , 'silver', 'lightcoral', 'firebrick', 'darkred' ,'red', 'orangered' , 'darkorange', 'gold', 'yellow' , 'yellowgreen' , 'limegreen', 'forestgreen' , 'darkgreen' , 'teal' , 'royalblue' , 'navy' , 'indigo']

    for y in range(len(y_listen)):
        plt.plot(x,y_listen[y], label = "Bereich " + str(y+1) , color = farben[y])

    
    #plt.plot(x, Summe , label = "Summe" , color = 'black')
    plt.xlabel('Winkel')
    plt.ylabel('Punkte')
    #plt.ylim(10,-10)

    if vergleich:
        x = np.linspace(0,2*pi,200)
        x_2 = np.linspace(0,pi,100)
        plt.plot(x, 50_000*((pi-x)/pi)**2, label = '$((x-pi)/pi)^2$', color= 'indigo')
        plt.plot(x_2,50_000*(x_2/pi)**2, label = "$(x/pi)^2$", color = 'purple')
        plt.plot(x_2, 50_000*(x_2/pi)*(pi-x_2)/pi, label = "$(x/pi)*(pi-x)/pi$", color = 'black')

    plt.legend()    
    plt.savefig('el_20231229_03_11.png')    
    plt.show()    

def graph_vergleich(x, y_werte ):
    x = list(x)
    y_listen = []
    Summe = list([])
    for i in range(len(y_werte[0])):
        y_listen += [[]]
        for j in y_werte:
            y_listen[i] += [j[i]]
            

    #Das Bild
    plt.figure(figsize=(12,8))

    farben = [ 'dimgray' , 'silver', 'lightcoral', 'firebrick', 'darkred' ,'red', 'orangered' , 'darkorange', 'gold', 'yellow' , 'yellowgreen' , 'limegreen', 'forestgreen' , 'darkgreen' , 'teal' , 'royalblue' , 'navy' , 'indigo']

    x = x[0:100]
    for y in range(len(y_listen)):
        y_listen[y] = y_listen[y][0:100]
    print(len(y_listen[0]))        

    for i in range(len(y_listen)):
        if i == 0 or i == 7:
            show = []
            for f in range(len(y_listen[i])):
                show += [y_listen[i][f] - 50_000*((pi-x[f])/pi)**2]
            plt.plot(x, show, label = "Bereich 1")
        elif i == 3 or i == 4:
            show = []
            for f in range(len(y_listen[i])):
                show += [y_listen[i][f] - 50_000*(x[f]/pi)**2]
            plt.plot(x, show, label = "Bereich 4")
        else: 
            show = []
            for f in range(len(y_listen[i])):
                show += [y_listen[i][f] - 50_000*(x[f]/pi)*((pi-x[f])/pi)]
            plt.plot(x, show, label = "Bereich 2/3") 
    x = np.linspace(0,pi,100)
    plt.plot(x, interpol([(0,0),(pi,0),(pi/2,0),(4*pi/5,1_184.1),(pi/5,1_181.1)],x), label ='Interpol von Fehler', color= 'black')
    plt.xlabel('Winkel')
    plt.ylabel('Punkte')        
    plt.legend()    
    plt.savefig('el_20231229_03_13.png')    
    plt.show()                 

    
Winkel = np.linspace(0,2*pi,200)    
"""with open('el_20231228_03.txt', "r") as speicher:
    speicher.readline()
    Daten = np.array(list(speicher.readline())).reshape(len(Winkel),8).tolist()"""
Daten = [[49887, 0, 0, 0, 0, 0, 0, 50113], [49407, 357, 339, 144, 147, 346, 381, 48879], [48564, 704, 690, 279, 296, 700, 704, 48063], [47344, 1049, 1057, 438, 469, 1082, 1123, 47438], [46876, 1381, 1443, 562, 642, 1409, 1436, 46251], [45301, 1762, 1830, 740, 760, 1732, 1851, 46024], [45007, 2112, 2043, 877, 881, 2138, 2086, 44856], [44253, 2456, 2423, 1066, 1050, 2564, 2419, 43769], [43051, 2794, 2779, 1188, 1171, 2868, 2824, 43325], [42213, 3266, 3144, 1376, 1333, 3164, 3210, 42294], [41311, 3530, 3510, 1568, 1403, 3634, 3626, 41418], [40347, 3965, 3987, 1714, 1719, 3872, 3819, 40577], [39669, 4194, 4233, 1853, 1797, 4093, 4182, 39979], [38829, 4538, 4473, 1947, 2007, 4633, 4667, 38906], [37978, 4887, 4908, 2093, 2084, 4934, 4813, 38303], [37501, 5304, 5127, 2300, 2285, 5221, 5104, 37158], [36540, 5491, 5644, 2429, 2450, 5640, 5484, 36322], [35446, 5856, 5920, 2686, 2694, 5951, 5835, 35612], [34834, 6243, 6155, 2835, 2889, 6265, 6151, 34628], [34104, 6569, 6514, 2997, 3040, 6517, 6413, 33846], [33074, 6913, 6899, 3211, 3224, 6712, 6865, 33102], [32492, 7106, 7324, 3379, 3401, 6987, 7086, 32225], [31659, 7407, 7455, 3572, 3497, 7543, 7529, 31338], [30645, 7884, 7726, 3769, 3747, 7775, 7733, 30721], [29884, 8103, 8177, 3993, 3990, 8078, 8028, 29747], [28947, 8267, 8397, 4203, 4095, 8414, 8604, 29073], [28181, 8823, 8573, 4350, 4480, 8780, 8534, 28279], [27471, 8938, 8984, 4447, 4619, 9038, 8980, 27523], [26745, 9194, 9298, 4884, 4875, 9231, 9067, 26706], [26089, 9578, 9392, 5041, 5041, 9431, 9499, 25929], [25165, 9667, 9797, 5278, 5291, 9818, 9624, 25360], [24536, 10024, 10032, 5631, 5546, 10018, 9843, 24370], [23510, 10194, 10251, 5899, 5773, 10314, 10313, 23746], [23075, 10518, 10572, 6140, 6083, 10459, 10344, 22809], [22234, 10859, 10641, 6452, 6368, 10476, 10781, 22189], [21459, 10908, 11062, 6731, 6686, 10924, 10764, 21466], [20604, 11292, 11000, 7155, 6894, 11011, 11139, 20905], [20165, 11200, 11251, 7169, 7398, 11454, 11274, 20089], [19565, 11493, 11464, 7652, 7622, 11271, 11646, 19287], [18903, 11532, 11762, 8131, 8010, 11465, 11462, 18735], [18071, 11775, 11610, 8305, 8361, 11961, 11837, 18080], [17775, 11875, 11891, 8560, 8601, 11934, 11974, 17390], [16912, 12115, 12032, 9005, 9054, 12012, 12065, 16805], [16239, 12005, 12218, 9496, 9466, 12169, 12024, 16383], [15549, 12099, 12403, 9971, 9700, 12253, 12139, 15886], [15027, 12432, 12341, 10382, 10242, 12330, 12196, 15050], [14482, 12549, 12269, 10725, 10739, 12419, 12448, 14369], [13995, 12504, 12473, 11264, 11255, 12337, 12535, 13637], [13457, 12399, 12493, 11470, 11638, 12496, 12525, 13522], [12857, 12559, 12606, 12143, 12250, 12305, 12356, 12924], [12138, 12434, 12431, 12861, 12595, 12450, 12696, 12395], [11873, 12569, 12527, 13087, 13123, 12501, 12472, 11848], [11341, 12324, 12570, 13639, 13676, 12580, 12590, 11280], [10848, 12409, 12444, 14115, 14116, 12541, 12509, 11018], [10379, 12420, 12392, 14674, 14692, 12541, 12494, 10408], [10041, 12130, 12416, 15321, 15328, 12383, 12332, 10049], [9688, 12111, 12254, 15967, 15637, 12308, 12270, 9765], [9341, 12234, 12172, 16439, 16384, 12287, 11862, 9281], [8899, 11938, 11959, 17280, 17343, 11789, 11883, 8909], [8353, 11868, 11999, 17942, 17821, 11659, 11891, 8467], [8230, 11741, 11616, 18416, 18370, 11667, 11763, 8197], [7801, 11512, 11524, 19129, 19033, 11482, 11645, 7874], [7334, 11512, 11462, 19649, 19925, 11407, 11272, 7439], [7145, 11116, 11133, 20490, 20442, 11262, 11279, 7133], [6983, 11075, 11113, 20918, 21040, 10993, 11125, 6753], [6615, 10629, 10651, 21975, 22093, 10828, 10655, 6554], [6236, 10409, 10659, 22570, 22876, 10535, 10460, 6255], [5992, 10048, 10482, 23482, 23284, 10398, 10183, 6131], [5779, 9948, 10149, 24084, 24291, 10093, 9923, 5733], [5516, 9918, 9930, 24835, 24727, 9819, 9831, 5424], [5220, 9675, 9463, 25378, 25567, 9700, 9705, 5292], [5079, 9414, 9335, 26357, 26160, 9303, 9291, 5061], [4678, 9157, 8940, 27254, 27045, 9130, 9005, 4791], [4494, 8928, 8789, 27907, 27768, 8748, 8897, 4469], [4368, 8406, 8437, 28551, 28741, 8524, 8491, 4482], [4109, 8191, 8211, 29502, 29637, 8321, 8022, 4007], [3915, 7932, 8019, 30194, 30217, 7932, 7968, 3823], [3666, 7551, 7639, 31200, 30943, 7607, 7586, 3808], [3525, 7464, 7257, 31682, 32021, 7240, 7337, 3474], [3201, 7041, 7035, 32898, 32346, 7021, 7200, 3258], [3113, 6651, 6709, 33534, 33439, 6692, 6714, 3148], [3044, 6250, 6365, 34345, 34337, 6308, 6396, 2955], [2826, 6195, 6039, 35007, 35131, 6004, 6083, 2715], [2656, 5829, 5709, 35967, 35935, 5628, 5750, 2526], [2461, 5423, 5441, 36446, 36966, 5523, 5415, 2325], [2174, 5147, 5116, 37903, 37391, 5048, 4961, 2260], [2046, 4691, 4697, 38755, 38226, 4666, 4746, 2173], [1891, 4450, 4294, 39196, 39445, 4365, 4425, 1934], [1779, 4011, 4007, 40147, 40135, 4038, 4120, 1763], [1555, 3610, 3711, 41224, 40941, 3703, 3655, 1601], [1485, 3366, 3441, 41676, 41814, 3373, 3419, 1426], [1295, 3015, 3035, 42693, 42752, 3055, 2889, 1266], [1121, 2707, 2646, 43647, 43441, 2704, 2608, 1126], [933, 2266, 2403, 44416, 44381, 2292, 2369, 940], [798, 1918, 1909, 45309, 45394, 1888, 1969, 815], [596, 1625, 1585, 46137, 46211, 1557, 1599, 690], [533, 1272, 1287, 46939, 47001, 1232, 1200, 536], [369, 860, 849, 47771, 47999, 909, 904, 339], [218, 502, 494, 48589, 48874, 542, 553, 228], [81, 187, 179, 49640, 49478, 188, 179, 68], [72, 166, 197, 49592, 49537, 178, 175, 83], [219, 508, 540, 48793, 48673, 514, 529, 224], [357, 869, 937, 47873, 47760, 894, 931, 379], [531, 1255, 1267, 47058, 46845, 1280, 1274, 490], [684, 1540, 1616, 46099, 46226, 1551, 1635, 649], [810, 1981, 1994, 45200, 45331, 1929, 1937, 818], [1008, 2276, 2322, 44415, 44430, 2306, 2294, 949], [1159, 2677, 2647, 43313, 43821, 2685, 2595, 1103], [1256, 3031, 3098, 42927, 42489, 3009, 2960, 1230], [1418, 3391, 3376, 41650, 42024, 3324, 3380, 1437], [1588, 3698, 3790, 40969, 41046, 3658, 3671, 1580], [1640, 4017, 3867, 40328, 40344, 4098, 3983, 1723], [1923, 4390, 4381, 39198, 39462, 4351, 4363, 1932], [2126, 4696, 4710, 38466, 38582, 4694, 4683, 2043], [2256, 4984, 5091, 37352, 37941, 5051, 5116, 2209], [2314, 5432, 5412, 36848, 36675, 5519, 5376, 2424], [2572, 5718, 5817, 36087, 35816, 5616, 5750, 2624], [2708, 5925, 6113, 35134, 35344, 6026, 6039, 2711], [2862, 6437, 6270, 34564, 34063, 6398, 6426, 2980], [3070, 6751, 6639, 33366, 33556, 6763, 6710, 3145], [3353, 6988, 7032, 32492, 32796, 6940, 7084, 3315], [3527, 7311, 7396, 31708, 31963, 7342, 7182, 3571], [3746, 7676, 7613, 31079, 30898, 7577, 7635, 3776], [3869, 7824, 7864, 30481, 30264, 7903, 8012, 3783], [4041, 8337, 8186, 29407, 29428, 8224, 8193, 4184], [4362, 8641, 8500, 28543, 28747, 8587, 8358, 4262], [4489, 8820, 8948, 27747, 27787, 8846, 8712, 4651], [4742, 9186, 9027, 27005, 26943, 9067, 9244, 4786], [4869, 9390, 9383, 26510, 26116, 9492, 9264, 4976], [5237, 9677, 9672, 25457, 25465, 9664, 9588, 5240], [5584, 9968, 9897, 24569, 24844, 9798, 9896, 5444], [5777, 9984, 10190, 23958, 24162, 10052, 10134, 5743], [5996, 10335, 10280, 23463, 23465, 10210, 10240, 6011], [6343, 10476, 10531, 22567, 22669, 10509, 10548, 6357], [6761, 10888, 10726, 21966, 21877, 10459, 10740, 6583], [6869, 11086, 11013, 21152, 20995, 10972, 10944, 6969], [7181, 11260, 11058, 20774, 20322, 11277, 11087, 7041], [7560, 11435, 11331, 19992, 19510, 11389, 11266, 7517], [7714, 11527, 11520, 18963, 19150, 11617, 11675, 7834], [8324, 11523, 11659, 18147, 18624, 11754, 11782, 8187], [8401, 11785, 11930, 17681, 17891, 11856, 11929, 8527], [8848, 12089, 11991, 17268, 17023, 11989, 12030, 8762], [9265, 12038, 12137, 16581, 16573, 12201, 12042, 9163], [9675, 12112, 12123, 15958, 15921, 12292, 12241, 9678], [10109, 12351, 12210, 15499, 15437, 12060, 12271, 10063], [10620, 12208, 12530, 14726, 15111, 12237, 12156, 10412], [11126, 12453, 12348, 14250, 14252, 12318, 12357, 10896], [11566, 12702, 12349, 13547, 13822, 12452, 12293, 11269], [11968, 12415, 12462, 13051, 13106, 12746, 12469, 11783], [12400, 12495, 12404, 12477, 12688, 12532, 12675, 12329], [13038, 12550, 12396, 12099, 12049, 12537, 12369, 12962], [13407, 12450, 12687, 11631, 11722, 12435, 12355, 13313], [14119, 12565, 12185, 11282, 11254, 12428, 12326, 13841], [14367, 12302, 12248, 10739, 10827, 12421, 12450, 14646], [15237, 12375, 12234, 10344, 10422, 12368, 12072, 14948], [15542, 12179, 12295, 9873, 9945, 12192, 12248, 15726], [16341, 12265, 12096, 9267, 9333, 12312, 12137, 16249], [16731, 11839, 12126, 8985, 9187, 12169, 11981, 16982], [17409, 11858, 12028, 8743, 8765, 11940, 11913, 17344], [17853, 11757, 11663, 8340, 8413, 11852, 12004, 18118], [18792, 11764, 11583, 8000, 8054, 11532, 11569, 18706], [19282, 11523, 11411, 7672, 7654, 11399, 11518, 19541], [20062, 11292, 11286, 7275, 7313, 11276, 11302, 20194], [20742, 11229, 11014, 7055, 6981, 11119, 11170, 20690], [21678, 10800, 10654, 6746, 6766, 10745, 10799, 21812], [22355, 10721, 10690, 6394, 6454, 10698, 10719, 21969], [23010, 10375, 10549, 6288, 6169, 10315, 10411, 22883], [23602, 10314, 10314, 5909, 5856, 10132, 10221, 23652], [24669, 10049, 9951, 5478, 5529, 10069, 9919, 24336], [25173, 9817, 9592, 5377, 5179, 9725, 9738, 25399], [26084, 9386, 9388, 5103, 5111, 9319, 9612, 25997], [26703, 9084, 9225, 4852, 4963, 9253, 9153, 26767], [27554, 8915, 8873, 4665, 4693, 8893, 8813, 27594], [28340, 8587, 8624, 4492, 4393, 8593, 8646, 28325], [29019, 8347, 8435, 4270, 4246, 8271, 8333, 29079], [29576, 8128, 8016, 3938, 4076, 8038, 8179, 30049], [30477, 7676, 7775, 3815, 3734, 7771, 7903, 30849], [31406, 7426, 7520, 3567, 3603, 7448, 7474, 31556], [32097, 7121, 7155, 3404, 3428, 7188, 7170, 32437], [33338, 6792, 6932, 3025, 3188, 6779, 6741, 33205], [33914, 6546, 6600, 2985, 2986, 6487, 6412, 34070], [34864, 6205, 6244, 2690, 2767, 6324, 6141, 34765], [35436, 6034, 5762, 2675, 2577, 5913, 5950, 35653], [36326, 5541, 5460, 2512, 2444, 5481, 5538, 36698], [37365, 5160, 5406, 2311, 2324, 5308, 5196, 36930], [38085, 4941, 4873, 2113, 2191, 4821, 4805, 38171], [38899, 4438, 4568, 1998, 1997, 4622, 4609, 38869], [39548, 4232, 4235, 1859, 1841, 4209, 4208, 39868], [40894, 3833, 3810, 1636, 1682, 3830, 3815, 40500], [41384, 3540, 3531, 1575, 1471, 3546, 3564, 41389], [42143, 3219, 3194, 1267, 1361, 3258, 3125, 42433], [43232, 2849, 2780, 1125, 1187, 2906, 2848, 43073], [43812, 2522, 2468, 1139, 1026, 2498, 2483, 44052], [44794, 2137, 2177, 850, 884, 2085, 2118, 44955], [45569, 1820, 1747, 693, 744, 1752, 1865, 45810], [46592, 1454, 1460, 606, 567, 1426, 1432, 46463], [47422, 1074, 1033, 433, 463, 1046, 1053, 47476], [48306, 690, 689, 283, 317, 757, 752, 48206], [49454, 389, 349, 140, 137, 340, 394, 48797], [49949, 0, 0, 0, 0, 0, 0, 50051]]
print(type(Daten))   
#graph_off(Winkel, Daten, True) 
graph_vergleich(Winkel, Daten)


>>>>>>> feb31d9d9aa4f269461fa84ea0354c65c54ce4d9
