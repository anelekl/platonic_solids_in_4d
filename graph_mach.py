
from math import *
import random 
import numpy as np
from matplotlib import pyplot as plt #für die graphiken
import time

# x Werte und eine Liste, die zu jeden x-Werte eine Liste der y-Werte enthällt
def graph_off(x, y_werte ,vergleich = False):
    y_listen = []
    Summe = list([])
    for i in range(len(y_werte[0])):
        y_listen += [[]]
        for j in y_werte:
            y_listen[i] += [j[i]]
            #if i == 0:
                #Summe += [sum(j)]
    #print(x,y_listen)

    #Das Bild
    plt.figure(figsize=(12,8))

    farben = [ 'dimgray' , 'silver', 'lightcoral', 'firebrick', 'darkred' ,'red', 'orangered' , 'darkorange', 'gold', 'yellow' , 'yellowgreen' , 'limegreen', 'forestgreen' , 'darkgreen' , 'teal' , 'royalblue' , 'navy' , 'indigo']

    for y in range(len(y_listen)):
        plt.plot(x,y_listen[y], label = "Bereich " + str(y+1) , color = farben[y])

    
    #plt.plot(x, Summe , label = "Summe" , color = 'black')
    plt.xlabel('Winkel')
    plt.ylabel('Punkte')
    #plt.ylim(10,-10)

    if vergleich:
        x = np.linspace(0,2*pi,200)
        x_2 = np.linspace(0,pi,100)
        plt.plot(x, 50_000*((pi-x)/pi)**2, label = '$((x-pi)/pi)^2$', color= 'indigo')
        plt.plot(x_2,50_000*(x_2/pi)**2, label = "$(x/pi)^2$", color = 'purple')
        plt.plot(x_2, 50_000*(x_2/pi)*(pi-x_2)/pi, label = "$(x/pi)*(pi-x)/pi$", color = 'black')

    plt.legend()    
    plt.savefig('el_20231229_03_03.png')    
    plt.show()    

def graph_vergleich(x, y_werte ):
    x = list(x)
    y_listen = []
    Summe = list([])
    for i in range(len(y_werte[0])):
        y_listen += [[]]
        for j in y_werte:
            y_listen[i] += [j[i]]
            

    #Das Bild
    plt.figure(figsize=(12,8))

    farben = [ 'dimgray' , 'silver', 'lightcoral', 'firebrick', 'darkred' ,'red', 'orangered' , 'darkorange', 'gold', 'yellow' , 'yellowgreen' , 'limegreen', 'forestgreen' , 'darkgreen' , 'teal' , 'royalblue' , 'navy' , 'indigo']

    x = x[0:100]
    for y in range(len(y_listen)):
        y_listen[y] = y_listen[y][0:100]
    print(len(y_listen[0]))        

    for i in range(len(y_listen)):
        if i == 0 or i == 7:
            show = []
            for f in range(len(y_listen[i])):
                show += [y_listen[i][f] - 50_000*((pi-x[f])/pi)**2]
            plt.plot(x, show, label = "Bereich 1")
        elif i == 3 or i == 4:
            show = []
            for f in range(len(y_listen[i])):
                show += [y_listen[i][f] - 50_000*(x[f]/pi)**2]
            plt.plot(x, show, label = "Bereich 4")
        else: 
            show = []
            for f in range(len(y_listen[i])):
                show += [y_listen[i][f] - 50_000*(x[f]/pi)*((pi-x[f])/pi)]
            plt.plot(x, show, label = "Bereich 2/3") 
    
    plt.xlabel('Winkel')
    plt.ylabel('Punkte')        
    plt.legend()    
    plt.savefig('el_20231229_03_04.png')    
    plt.show()                 

    
Winkel = np.linspace(0,2*pi,200)    
"""with open('el_20231228_03.txt', "r") as speicher:
    speicher.readline()
    Daten = np.array(list(speicher.readline())).reshape(len(Winkel),8).tolist()"""
Daten = [[49887, 0, 0, 0, 0, 0, 0, 50113], [49407, 357, 339, 144, 147, 346, 381, 48879], [48564, 704, 690, 279, 296, 700, 704, 48063], [47344, 1049, 1057, 438, 469, 1082, 1123, 47438], [46876, 1381, 1443, 562, 642, 1409, 1436, 46251], [45301, 1762, 1830, 740, 760, 1732, 1851, 46024], [45007, 2112, 2043, 877, 881, 2138, 2086, 44856], [44253, 2456, 2423, 1066, 1050, 2564, 2419, 43769], [43051, 2794, 2779, 1188, 1171, 2868, 2824, 43325], [42213, 3266, 3144, 1376, 1333, 3164, 3210, 42294], [41311, 3530, 3510, 1568, 1403, 3634, 3626, 41418], [40347, 3965, 3987, 1714, 1719, 3872, 3819, 40577], [39669, 4194, 4233, 1853, 1797, 4093, 4182, 39979], [38829, 4538, 4473, 1947, 2007, 4633, 4667, 38906], [37978, 4887, 4908, 2093, 2084, 4934, 4813, 38303], [37501, 5304, 5127, 2300, 2285, 5221, 5104, 37158], [36540, 5491, 5644, 2429, 2450, 5640, 5484, 36322], [35446, 5856, 5920, 2686, 2694, 5951, 5835, 35612], [34834, 6243, 6155, 2835, 2889, 6265, 6151, 34628], [34104, 6569, 6514, 2997, 3040, 6517, 6413, 33846], [33074, 6913, 6899, 3211, 3224, 6712, 6865, 33102], [32492, 7106, 7324, 3379, 3401, 6987, 7086, 32225], [31659, 7407, 7455, 3572, 3497, 7543, 7529, 31338], [30645, 7884, 7726, 3769, 3747, 7775, 7733, 30721], [29884, 8103, 8177, 3993, 3990, 8078, 8028, 29747], [28947, 8267, 8397, 4203, 4095, 8414, 8604, 29073], [28181, 8823, 8573, 4350, 4480, 8780, 8534, 28279], [27471, 8938, 8984, 4447, 4619, 9038, 8980, 27523], [26745, 9194, 9298, 4884, 4875, 9231, 9067, 26706], [26089, 9578, 9392, 5041, 5041, 9431, 9499, 25929], [25165, 9667, 9797, 5278, 5291, 9818, 9624, 25360], [24536, 10024, 10032, 5631, 5546, 10018, 9843, 24370], [23510, 10194, 10251, 5899, 5773, 10314, 10313, 23746], [23075, 10518, 10572, 6140, 6083, 10459, 10344, 22809], [22234, 10859, 10641, 6452, 6368, 10476, 10781, 22189], [21459, 10908, 11062, 6731, 6686, 10924, 10764, 21466], [20604, 11292, 11000, 7155, 6894, 11011, 11139, 20905], [20165, 11200, 11251, 7169, 7398, 11454, 11274, 20089], [19565, 11493, 11464, 7652, 7622, 11271, 11646, 19287], [18903, 11532, 11762, 8131, 8010, 11465, 11462, 18735], [18071, 11775, 11610, 8305, 8361, 11961, 11837, 18080], [17775, 11875, 11891, 8560, 8601, 11934, 11974, 17390], [16912, 12115, 12032, 9005, 9054, 12012, 12065, 16805], [16239, 12005, 12218, 9496, 9466, 12169, 12024, 16383], [15549, 12099, 12403, 9971, 9700, 12253, 12139, 15886], [15027, 12432, 12341, 10382, 10242, 12330, 12196, 15050], [14482, 12549, 12269, 10725, 10739, 12419, 12448, 14369], [13995, 12504, 12473, 11264, 11255, 12337, 12535, 13637], [13457, 12399, 12493, 11470, 11638, 12496, 12525, 13522], [12857, 12559, 12606, 12143, 12250, 12305, 12356, 12924], [12138, 12434, 12431, 12861, 12595, 12450, 12696, 12395], [11873, 12569, 12527, 13087, 13123, 12501, 12472, 11848], [11341, 12324, 12570, 13639, 13676, 12580, 12590, 11280], [10848, 12409, 12444, 14115, 14116, 12541, 12509, 11018], [10379, 12420, 12392, 14674, 14692, 12541, 12494, 10408], [10041, 12130, 12416, 15321, 15328, 12383, 12332, 10049], [9688, 12111, 12254, 15967, 15637, 12308, 12270, 9765], [9341, 12234, 12172, 16439, 16384, 12287, 11862, 9281], [8899, 11938, 11959, 17280, 17343, 11789, 11883, 8909], [8353, 11868, 11999, 17942, 17821, 11659, 11891, 8467], [8230, 11741, 11616, 18416, 18370, 11667, 11763, 8197], [7801, 11512, 11524, 19129, 19033, 11482, 11645, 7874], [7334, 11512, 11462, 19649, 19925, 11407, 11272, 7439], [7145, 11116, 11133, 20490, 20442, 11262, 11279, 7133], [6983, 11075, 11113, 20918, 21040, 10993, 11125, 6753], [6615, 10629, 10651, 21975, 22093, 10828, 10655, 6554], [6236, 10409, 10659, 22570, 22876, 10535, 10460, 6255], [5992, 10048, 10482, 23482, 23284, 10398, 10183, 6131], [5779, 9948, 10149, 24084, 24291, 10093, 9923, 5733], [5516, 9918, 9930, 24835, 24727, 9819, 9831, 5424], [5220, 9675, 9463, 25378, 25567, 9700, 9705, 5292], [5079, 9414, 9335, 26357, 26160, 9303, 9291, 5061], [4678, 9157, 8940, 27254, 27045, 9130, 9005, 4791], [4494, 8928, 8789, 27907, 27768, 8748, 8897, 4469], [4368, 8406, 8437, 28551, 28741, 8524, 8491, 4482], [4109, 8191, 8211, 29502, 29637, 8321, 8022, 4007], [3915, 7932, 8019, 30194, 30217, 7932, 7968, 3823], [3666, 7551, 7639, 31200, 30943, 7607, 7586, 3808], [3525, 7464, 7257, 31682, 32021, 7240, 7337, 3474], [3201, 7041, 7035, 32898, 32346, 7021, 7200, 3258], [3113, 6651, 6709, 33534, 33439, 6692, 6714, 3148], [3044, 6250, 6365, 34345, 34337, 6308, 6396, 2955], [2826, 6195, 6039, 35007, 35131, 6004, 6083, 2715], [2656, 5829, 5709, 35967, 35935, 5628, 5750, 2526], [2461, 5423, 5441, 36446, 36966, 5523, 5415, 2325], [2174, 5147, 5116, 37903, 37391, 5048, 4961, 2260], [2046, 4691, 4697, 38755, 38226, 4666, 4746, 2173], [1891, 4450, 4294, 39196, 39445, 4365, 4425, 1934], [1779, 4011, 4007, 40147, 40135, 4038, 4120, 1763], [1555, 3610, 3711, 41224, 40941, 3703, 3655, 1601], [1485, 3366, 3441, 41676, 41814, 3373, 3419, 1426], [1295, 3015, 3035, 42693, 42752, 3055, 2889, 1266], [1121, 2707, 2646, 43647, 43441, 2704, 2608, 1126], [933, 2266, 2403, 44416, 44381, 2292, 2369, 940], [798, 1918, 1909, 45309, 45394, 1888, 1969, 815], [596, 1625, 1585, 46137, 46211, 1557, 1599, 690], [533, 1272, 1287, 46939, 47001, 1232, 1200, 536], [369, 860, 849, 47771, 47999, 909, 904, 339], [218, 502, 494, 48589, 48874, 542, 553, 228], [81, 187, 179, 49640, 49478, 188, 179, 68], [72, 166, 197, 49592, 49537, 178, 175, 83], [219, 508, 540, 48793, 48673, 514, 529, 224], [357, 869, 937, 47873, 47760, 894, 931, 379], [531, 1255, 1267, 47058, 46845, 1280, 1274, 490], [684, 1540, 1616, 46099, 46226, 1551, 1635, 649], [810, 1981, 1994, 45200, 45331, 1929, 1937, 818], [1008, 2276, 2322, 44415, 44430, 2306, 2294, 949], [1159, 2677, 2647, 43313, 43821, 2685, 2595, 1103], [1256, 3031, 3098, 42927, 42489, 3009, 2960, 1230], [1418, 3391, 3376, 41650, 42024, 3324, 3380, 1437], [1588, 3698, 3790, 40969, 41046, 3658, 3671, 1580], [1640, 4017, 3867, 40328, 40344, 4098, 3983, 1723], [1923, 4390, 4381, 39198, 39462, 4351, 4363, 1932], [2126, 4696, 4710, 38466, 38582, 4694, 4683, 2043], [2256, 4984, 5091, 37352, 37941, 5051, 5116, 2209], [2314, 5432, 5412, 36848, 36675, 5519, 5376, 2424], [2572, 5718, 5817, 36087, 35816, 5616, 5750, 2624], [2708, 5925, 6113, 35134, 35344, 6026, 6039, 2711], [2862, 6437, 6270, 34564, 34063, 6398, 6426, 2980], [3070, 6751, 6639, 33366, 33556, 6763, 6710, 3145], [3353, 6988, 7032, 32492, 32796, 6940, 7084, 3315], [3527, 7311, 7396, 31708, 31963, 7342, 7182, 3571], [3746, 7676, 7613, 31079, 30898, 7577, 7635, 3776], [3869, 7824, 7864, 30481, 30264, 7903, 8012, 3783], [4041, 8337, 8186, 29407, 29428, 8224, 8193, 4184], [4362, 8641, 8500, 28543, 28747, 8587, 8358, 4262], [4489, 8820, 8948, 27747, 27787, 8846, 8712, 4651], [4742, 9186, 9027, 27005, 26943, 9067, 9244, 4786], [4869, 9390, 9383, 26510, 26116, 9492, 9264, 4976], [5237, 9677, 9672, 25457, 25465, 9664, 9588, 5240], [5584, 9968, 9897, 24569, 24844, 9798, 9896, 5444], [5777, 9984, 10190, 23958, 24162, 10052, 10134, 5743], [5996, 10335, 10280, 23463, 23465, 10210, 10240, 6011], [6343, 10476, 10531, 22567, 22669, 10509, 10548, 6357], [6761, 10888, 10726, 21966, 21877, 10459, 10740, 6583], [6869, 11086, 11013, 21152, 20995, 10972, 10944, 6969], [7181, 11260, 11058, 20774, 20322, 11277, 11087, 7041], [7560, 11435, 11331, 19992, 19510, 11389, 11266, 7517], [7714, 11527, 11520, 18963, 19150, 11617, 11675, 7834], [8324, 11523, 11659, 18147, 18624, 11754, 11782, 8187], [8401, 11785, 11930, 17681, 17891, 11856, 11929, 8527], [8848, 12089, 11991, 17268, 17023, 11989, 12030, 8762], [9265, 12038, 12137, 16581, 16573, 12201, 12042, 9163], [9675, 12112, 12123, 15958, 15921, 12292, 12241, 9678], [10109, 12351, 12210, 15499, 15437, 12060, 12271, 10063], [10620, 12208, 12530, 14726, 15111, 12237, 12156, 10412], [11126, 12453, 12348, 14250, 14252, 12318, 12357, 10896], [11566, 12702, 12349, 13547, 13822, 12452, 12293, 11269], [11968, 12415, 12462, 13051, 13106, 12746, 12469, 11783], [12400, 12495, 12404, 12477, 12688, 12532, 12675, 12329], [13038, 12550, 12396, 12099, 12049, 12537, 12369, 12962], [13407, 12450, 12687, 11631, 11722, 12435, 12355, 13313], [14119, 12565, 12185, 11282, 11254, 12428, 12326, 13841], [14367, 12302, 12248, 10739, 10827, 12421, 12450, 14646], [15237, 12375, 12234, 10344, 10422, 12368, 12072, 14948], [15542, 12179, 12295, 9873, 9945, 12192, 12248, 15726], [16341, 12265, 12096, 9267, 9333, 12312, 12137, 16249], [16731, 11839, 12126, 8985, 9187, 12169, 11981, 16982], [17409, 11858, 12028, 8743, 8765, 11940, 11913, 17344], [17853, 11757, 11663, 8340, 8413, 11852, 12004, 18118], [18792, 11764, 11583, 8000, 8054, 11532, 11569, 18706], [19282, 11523, 11411, 7672, 7654, 11399, 11518, 19541], [20062, 11292, 11286, 7275, 7313, 11276, 11302, 20194], [20742, 11229, 11014, 7055, 6981, 11119, 11170, 20690], [21678, 10800, 10654, 6746, 6766, 10745, 10799, 21812], [22355, 10721, 10690, 6394, 6454, 10698, 10719, 21969], [23010, 10375, 10549, 6288, 6169, 10315, 10411, 22883], [23602, 10314, 10314, 5909, 5856, 10132, 10221, 23652], [24669, 10049, 9951, 5478, 5529, 10069, 9919, 24336], [25173, 9817, 9592, 5377, 5179, 9725, 9738, 25399], [26084, 9386, 9388, 5103, 5111, 9319, 9612, 25997], [26703, 9084, 9225, 4852, 4963, 9253, 9153, 26767], [27554, 8915, 8873, 4665, 4693, 8893, 8813, 27594], [28340, 8587, 8624, 4492, 4393, 8593, 8646, 28325], [29019, 8347, 8435, 4270, 4246, 8271, 8333, 29079], [29576, 8128, 8016, 3938, 4076, 8038, 8179, 30049], [30477, 7676, 7775, 3815, 3734, 7771, 7903, 30849], [31406, 7426, 7520, 3567, 3603, 7448, 7474, 31556], [32097, 7121, 7155, 3404, 3428, 7188, 7170, 32437], [33338, 6792, 6932, 3025, 3188, 6779, 6741, 33205], [33914, 6546, 6600, 2985, 2986, 6487, 6412, 34070], [34864, 6205, 6244, 2690, 2767, 6324, 6141, 34765], [35436, 6034, 5762, 2675, 2577, 5913, 5950, 35653], [36326, 5541, 5460, 2512, 2444, 5481, 5538, 36698], [37365, 5160, 5406, 2311, 2324, 5308, 5196, 36930], [38085, 4941, 4873, 2113, 2191, 4821, 4805, 38171], [38899, 4438, 4568, 1998, 1997, 4622, 4609, 38869], [39548, 4232, 4235, 1859, 1841, 4209, 4208, 39868], [40894, 3833, 3810, 1636, 1682, 3830, 3815, 40500], [41384, 3540, 3531, 1575, 1471, 3546, 3564, 41389], [42143, 3219, 3194, 1267, 1361, 3258, 3125, 42433], [43232, 2849, 2780, 1125, 1187, 2906, 2848, 43073], [43812, 2522, 2468, 1139, 1026, 2498, 2483, 44052], [44794, 2137, 2177, 850, 884, 2085, 2118, 44955], [45569, 1820, 1747, 693, 744, 1752, 1865, 45810], [46592, 1454, 1460, 606, 567, 1426, 1432, 46463], [47422, 1074, 1033, 433, 463, 1046, 1053, 47476], [48306, 690, 689, 283, 317, 757, 752, 48206], [49454, 389, 349, 140, 137, 340, 394, 48797], [49949, 0, 0, 0, 0, 0, 0, 50051]]
print(type(Daten))   
graph_off(Winkel, Daten, True) 
graph_vergleich(Winkel, Daten)